pre-commit:
  piped: true

  # Always prints the output of each command.
  # This allows the error log to be checked even if the command becomes busy.
  follow: true

  commands:
    0_test-readme:
      # If "{REPO_ROOT}/README.md" is staged, test it
      # Note: README.md files in subdirectories are not included
      files: git diff --name-only --cached | grep -Fx README.md || true
      run: pnpm run test:readme
    1_format:
      # Call the "lefthook run ..." command within lefthook to perform parallel execution in the middle of a serial execution
      # see https://github.com/evilmartians/lefthook/issues/66#issuecomment-1313279972
      env:
        LEFTHOOK_QUIET: meta,summary,success
      run: pnpm exec lefthook run _pre-commit__format
    2_build-readme:
      # If any file other than "{REPO_ROOT}/README.md" is staged, build README.md
      # Note: README.md files in subdirectories are included
      files: git diff --name-only --cached | grep -Fvx README.md || true
      run: >-
        pnpm run build:readme
        && git add ./README.md
    3_git-add:
      run: git add {staged_files}

_pre-commit__format:
  parallel: true
  commands:
    format/config:
      env:
        LEFTHOOK_QUIET: meta,summary,success
      run: lefthook run _pre-commit__format__config
    format/eslint:
      # Note: ".js" and ".ts" files are formatted by ESLint's "eslint-plugin-prettier" plugin.
      #       So there is no need to use Prettier for these files.
      glob: "*.{ts,js,cjs,mjs}"
      run: pnpm exec eslint --fix {staged_files}

_pre-commit__format__config:
  piped: true
  commands:
    format/config/0_prettier:
      glob: "*.{json,json5,yaml,yml}"
      run: pnpm exec prettier --write {staged_files}
    format/config/1_format-package-json:
      # Note: If "package.json" is specified, only the root package.json file will be included.
      #       If "**/package.json" is specified, only package.json files in subdirectories will be included.
      #       To include both, it appears that the "{,**/}package.json" pattern should be used.
      glob: "{,**/}package.json"
      run: >-
        pnpm exec prettier-package-json --write {staged_files}
        && pnpm exec sort-package-json {staged_files}
